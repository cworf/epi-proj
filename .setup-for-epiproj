SETUP: -------------------------->
  ng new //project name// --style=scss
  git init
  npm install bootstrap --save
  npm install angularfire2@4.0.0-rc.0 firebase@^3.6.6 --save
  touch api-keys.ts

  ts.config.json
    "types": [ "firebase" ]

  .gitignore
    # dependencies
    /node_modules

    #Firebase credentials
    /src/app/api-keys.ts

  .angular-cli.json
    "styles": [
      "../node_modules/bootstrap/dist/css/bootstrap.min.css"
    ],

  api-keys.ts
    export var masterFirebaseConfig = {
      apiKey: "xxxx",
      authDomain: "xxxx.firebaseapp.com",
      databaseURL: "https://xxxx.firebaseio.com",
      storageBucket: "xxxx.appspot.com",
      messagingSenderId: "xxxx"
    };



ANGULAR CLI COMMANDS: ---------------------->

ng serve --open
  to launch our project in Chrome.
  Ctrl + C to stop serving
  * Adding new packages or changing any configuration will require a server restart before changes are reflected in the application. Whenever you experience a bug or other issue, re-starting the server should be one of your first troubleshooting steps. *

ng lint
  Angular's built-in TypeScript linter that will inform us of any syntax errors in our code.
  * When debugging, the ng lint command can help quickly locate syntax errors. *

ng g component //name of component//
  Creates a new component.
  * ng generate component component-name *

ng g pipe //pipe-name//
  Creates a new pipe.

ng g class //class-name//.model
  Creates a new class to use as a model.

ng g service //name//
  Creates a new service file.

******* For More https://cli.angular.io/reference.pdf *******


*********FIREBASE********************
SETUP---------------->

  api-keys.ts
    export var masterFirebaseConfig = {
      apiKey: "xxxx",
      authDomain: "xxxx.firebaseapp.com",
      databaseURL: "https://xxxx.firebaseio.com",
      storageBucket: "xxxx.appspot.com",
      messagingSenderId: "xxxx
    };

    Visit our Firebase Console once more, and select our project's name from the list.
    Then, we'll visit the Database area by selecting the Database option from the navbar on the left-hand side.
    Near the top of the page, there should be a blue navbar reading Realtime Database. Below this, select the option that reads RULES.
    Change both the ".read", and ".write" properties here to "true", as seen below, then click Publish:

      {
        "rules": {
          ".read": "true",
          ".write": "true"
        }
      }

FIREBASE HOSTING INIT ----------------------->
  ng build --env=prod
  firebase login
  firebase init

    what public folder
      dist
    rest is default N

  firebase deploy

  //project name//.firebaseapp.com
  ***epi-proj.firebaseapp.com***

FIREBASE UPDATE ------------------>
  ng build --env=prod
  firebase login?
  firebase deploy
